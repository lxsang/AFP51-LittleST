[{"value": "Object", "score": 1000, "meta": "class"}
,{"value": "Object", "score": 1000, "meta": "class"}
,{"value": "Random", "score": 1000, "meta": "class"}
,{"value": "ROSTopic", "score": 1000, "meta": "class"}
,{"value": "Boolean", "score": 1000, "meta": "class"}
,{"value": "False", "score": 1000, "meta": "class"}
,{"value": "True", "score": 1000, "meta": "class"}
,{"value": "Link", "score": 1000, "meta": "class"}
,{"value": "DeviceMapper", "score": 1000, "meta": "class"}
,{"value": "APF51Mapper", "score": 1000, "meta": "class"}
,{"value": "FRDBMapper", "score": 1000, "meta": "class"}
,{"value": "SCMapper", "score": 1000, "meta": "class"}
,{"value": "RWTest", "score": 1000, "meta": "class"}
,{"value": "ODMapper", "score": 1000, "meta": "class"}
,{"value": "Switch", "score": 1000, "meta": "class"}
,{"value": "Semaphore", "score": 1000, "meta": "class"}
,{"value": "Context", "score": 1000, "meta": "class"}
,{"value": "Scheduler", "score": 1000, "meta": "class"}
,{"value": "Magnitude", "score": 1000, "meta": "class"}
,{"value": "Collection", "score": 1000, "meta": "class"}
,{"value": "Interval", "score": 1000, "meta": "class"}
,{"value": "List", "score": 1000, "meta": "class"}
,{"value": "Set", "score": 1000, "meta": "class"}
,{"value": "IndexedCollection", "score": 1000, "meta": "class"}
,{"value": "Dictionary", "score": 1000, "meta": "class"}
,{"value": "Array", "score": 1000, "meta": "class"}
,{"value": "ByteArray", "score": 1000, "meta": "class"}
,{"value": "String", "score": 1000, "meta": "class"}
,{"value": "Number", "score": 1000, "meta": "class"}
,{"value": "Fraction", "score": 1000, "meta": "class"}
,{"value": "Float", "score": 1000, "meta": "class"}
,{"value": "Integer", "score": 1000, "meta": "class"}
,{"value": "LongInteger", "score": 1000, "meta": "class"}
,{"value": "Char", "score": 1000, "meta": "class"}
,{"value": "Method", "score": 1000, "meta": "class"}
,{"value": "UndefinedObject", "score": 1000, "meta": "class"}
,{"value": "Symbol", "score": 1000, "meta": "class"}
,{"value": "Pointer", "score": 1000, "meta": "class"}
,{"value": "Block", "score": 1000, "meta": "class"}
,{"value": "ROSNode", "score": 1000, "meta": "class"}
,{"value": "File", "score": 1000, "meta": "class"}
,{"value": "Date", "score": 1000, "meta": "class"}
,{"value": "Process", "score": 1000, "meta": "class"}
,{"value": "ImageManager", "score": 1000, "meta": "class"}
,{"value": "Class", "score": 1000, "meta": "class"}
,{"value": "Smalltalk", "score": 1000, "meta": "class"}
,{"value": "saveImage:", "score": 1000, "meta": "method"}
,{"value": "perform:withArguments:ifError:", "score": 1000, "meta": "method"}
,{"value": "error:", "score": 1000, "meta": "method"}
,{"value": "watch", "score": 1000, "meta": "method"}
,{"value": "perform:withArguments:", "score": 1000, "meta": "method"}
,{"value": "getPrompt:", "score": 1000, "meta": "method"}
,{"value": "echo", "score": 1000, "meta": "method"}
,{"value": "inquire:", "score": 1000, "meta": "method"}
,{"value": "new:", "score": 1000, "meta": "method"}
,{"value": "superClass:", "score": 1000, "meta": "method"}
,{"value": "upSuperclassChain:", "score": 1000, "meta": "method"}
,{"value": "viewMethod:", "score": 1000, "meta": "method"}
,{"value": "methods", "score": 1000, "meta": "method"}
,{"value": "variables:", "score": 1000, "meta": "method"}
,{"value": "readInstanceVariables", "score": 1000, "meta": "method"}
,{"value": "addSubClass:instanceVariableNames:", "score": 1000, "meta": "method"}
,{"value": "fileOut", "score": 1000, "meta": "method"}
,{"value": "subClasses", "score": 1000, "meta": "method"}
,{"value": "superClass", "score": 1000, "meta": "method"}
,{"value": "addMethod", "score": 1000, "meta": "method"}
,{"value": "editMethod:", "score": 1000, "meta": "method"}
,{"value": "fileOutMethodsOn:", "score": 1000, "meta": "method"}
,{"value": "readMethods", "score": 1000, "meta": "method"}
,{"value": "variables", "score": 1000, "meta": "method"}
,{"value": "fileOutOn:", "score": 1000, "meta": "method"}
,{"value": "instanceSize", "score": 1000, "meta": "method"}
,{"value": "methodNamed:", "score": 1000, "meta": "method"}
,{"value": "doEdit:", "score": 1000, "meta": "method"}
,{"value": "addMethodTo:", "score": 1000, "meta": "method"}
,{"value": "editMethod:of:", "score": 1000, "meta": "method"}
,{"value": "allSystemClasses", "score": 1000, "meta": "method"}
,{"value": "allMethodsOf:", "score": 1000, "meta": "method"}
,{"value": "imageKeywords:", "score": 1000, "meta": "method"}
,{"value": "sourceOf:in:", "score": 1000, "meta": "method"}
,{"value": "variablesOf:", "score": 1000, "meta": "method"}
,{"value": "genAllKeywordsOf:to:", "score": 1000, "meta": "method"}
,{"value": "exportClass:to:", "score": 1000, "meta": "method"}
,{"value": "dumpAllSubClassesOf:to:", "score": 1000, "meta": "method"}
,{"value": "allSubClassesOf:", "score": 1000, "meta": "method"}
,{"value": "context:", "score": 1000, "meta": "method"}
,{"value": "context", "score": 1000, "meta": "method"}
,{"value": "terminate", "score": 1000, "meta": "method"}
,{"value": "startAt:", "score": 1000, "meta": "method"}
,{"value": "trace", "score": 1000, "meta": "method"}
,{"value": "minute", "score": 1000, "meta": "method"}
,{"value": "month", "score": 1000, "meta": "method"}
,{"value": "second", "score": 1000, "meta": "method"}
,{"value": "stamp", "score": 1000, "meta": "method"}
,{"value": "year", "score": 1000, "meta": "method"}
,{"value": "day", "score": 1000, "meta": "method"}
,{"value": "hour", "score": 1000, "meta": "method"}
,{"value": "open:", "score": 1000, "meta": "method"}
,{"value": "readUntil:doing:", "score": 1000, "meta": "method"}
,{"value": "print:", "score": 1000, "meta": "method"}
,{"value": "saveImage", "score": 1000, "meta": "method"}
,{"value": "mode:", "score": 1000, "meta": "method"}
,{"value": "fileIn", "score": 1000, "meta": "method"}
,{"value": "fileIn:", "score": 1000, "meta": "method"}
,{"value": "printNoReturn:", "score": 1000, "meta": "method"}
,{"value": "scratchFile", "score": 1000, "meta": "method"}
,{"value": "getNumber", "score": 1000, "meta": "method"}
,{"value": "delete", "score": 1000, "meta": "method"}
,{"value": "getString", "score": 1000, "meta": "method"}
,{"value": "rosToggle:", "score": 1000, "meta": "method"}
,{"value": "masterUri", "score": 1000, "meta": "method"}
,{"value": "masterPort", "score": 1000, "meta": "method"}
,{"value": "createPublisher:type:", "score": 1000, "meta": "method"}
,{"value": "master:at:", "score": 1000, "meta": "method"}
,{"value": "deploy", "score": 1000, "meta": "method"}
,{"value": "subscribeTo:type:do:", "score": 1000, "meta": "method"}
,{"value": "rosOk", "score": 1000, "meta": "method"}
,{"value": "spin", "score": 1000, "meta": "method"}
,{"value": "name:", "score": 1000, "meta": "method"}
,{"value": "forkWith:", "score": 1000, "meta": "method"}
,{"value": "fork", "score": 1000, "meta": "method"}
,{"value": "value:value:", "score": 1000, "meta": "method"}
,{"value": "whileTrue", "score": 1000, "meta": "method"}
,{"value": "checkArgumentCount:", "score": 1000, "meta": "method"}
,{"value": "value:value:value:", "score": 1000, "meta": "method"}
,{"value": "whileFalse:", "score": 1000, "meta": "method"}
,{"value": "blockContext:", "score": 1000, "meta": "method"}
,{"value": "newProcess", "score": 1000, "meta": "method"}
,{"value": "whileTrue:", "score": 1000, "meta": "method"}
,{"value": "newProcessWith:", "score": 1000, "meta": "method"}
,{"value": "timesToRun", "score": 1000, "meta": "method"}
,{"value": "apply:ifError:", "score": 1000, "meta": "method"}
,{"value": "assign:", "score": 1000, "meta": "method"}
,{"value": "apply:", "score": 1000, "meta": "method"}
,{"value": "respondsTo", "score": 1000, "meta": "method"}
,{"value": "createGlobals", "score": 1000, "meta": "method"}
,{"value": "text:", "score": 1000, "meta": "method"}
,{"value": "text", "score": 1000, "meta": "method"}
,{"value": "watchWith:", "score": 1000, "meta": "method"}
,{"value": "compileWithClass:", "score": 1000, "meta": "method"}
,{"value": "watch:", "score": 1000, "meta": "method"}
,{"value": "message:", "score": 1000, "meta": "method"}
,{"value": "executeWith:", "score": 1000, "meta": "method"}
,{"value": "isAlphabetic", "score": 1000, "meta": "method"}
,{"value": "isDigit", "score": 1000, "meta": "method"}
,{"value": "isLowercase", "score": 1000, "meta": "method"}
,{"value": "digitValue", "score": 1000, "meta": "method"}
,{"value": "isAlphaNumeric", "score": 1000, "meta": "method"}
,{"value": "isBlank", "score": 1000, "meta": "method"}
,{"value": "isUppercase", "score": 1000, "meta": "method"}
,{"value": "sign:digits:", "score": 1000, "meta": "method"}
,{"value": "timesShort:", "score": 1000, "meta": "method"}
,{"value": "digits", "score": 1000, "meta": "method"}
,{"value": "with:bitDo:", "score": 1000, "meta": "method"}
,{"value": "asFraction", "score": 1000, "meta": "method"}
,{"value": "bitShift:", "score": 1000, "meta": "method"}
,{"value": "radix:", "score": 1000, "meta": "method"}
,{"value": "timesRepeat:", "score": 1000, "meta": "method"}
,{"value": "even", "score": 1000, "meta": "method"}
,{"value": "lcm:", "score": 1000, "meta": "method"}
,{"value": "odd", "score": 1000, "meta": "method"}
,{"value": "bitAnd:", "score": 1000, "meta": "method"}
,{"value": "factorial", "score": 1000, "meta": "method"}
,{"value": "asCharacter", "score": 1000, "meta": "method"}
,{"value": "asLongInteger", "score": 1000, "meta": "method"}
,{"value": "bitOr:", "score": 1000, "meta": "method"}
,{"value": "bitXor:", "score": 1000, "meta": "method"}
,{"value": "anyMask:", "score": 1000, "meta": "method"}
,{"value": "seconds", "score": 1000, "meta": "method"}
,{"value": "allMask:", "score": 1000, "meta": "method"}
,{"value": "bitAt:", "score": 1000, "meta": "method"}
,{"value": "gcd:", "score": 1000, "meta": "method"}
,{"value": "miliseconds", "score": 1000, "meta": "method"}
,{"value": "minutes", "score": 1000, "meta": "method"}
,{"value": "bitInvert", "score": 1000, "meta": "method"}
,{"value": "asDigit", "score": 1000, "meta": "method"}
,{"value": "integerPart", "score": 1000, "meta": "method"}
,{"value": "rounded", "score": 1000, "meta": "method"}
,{"value": "truncated", "score": 1000, "meta": "method"}
,{"value": "generality", "score": 1000, "meta": "method"}
,{"value": "top", "score": 1000, "meta": "method"}
,{"value": "with:over:", "score": 1000, "meta": "method"}
,{"value": "bottom", "score": 1000, "meta": "method"}
,{"value": "asFloat", "score": 1000, "meta": "method"}
,{"value": "coerce:", "score": 1000, "meta": "method"}
,{"value": "abs", "score": 1000, "meta": "method"}
,{"value": "negated", "score": 1000, "meta": "method"}
,{"value": "trucateTo:", "score": 1000, "meta": "method"}
,{"value": "exp", "score": 1000, "meta": "method"}
,{"value": "reciprocal", "score": 1000, "meta": "method"}
,{"value": "rem:", "score": 1000, "meta": "method"}
,{"value": "+", "score": 1000, "meta": "method"}
,{"value": "//", "score": 1000, "meta": "method"}
,{"value": "log:", "score": 1000, "meta": "method"}
,{"value": "to:", "score": 1000, "meta": "method"}
,{"value": "-", "score": 1000, "meta": "method"}
,{"value": "positive", "score": 1000, "meta": "method"}
,{"value": "roundTo:", "score": 1000, "meta": "method"}
,{"value": "maxgen:", "score": 1000, "meta": "method"}
,{"value": "floor", "score": 1000, "meta": "method"}
,{"value": "negative", "score": 1000, "meta": "method"}
,{"value": "sign", "score": 1000, "meta": "method"}
,{"value": "strictlyPositive", "score": 1000, "meta": "method"}
,{"value": "*", "score": 1000, "meta": "method"}
,{"value": "\\", "score": 1000, "meta": "method"}
,{"value": "to:by:", "score": 1000, "meta": "method"}
,{"value": "fractionalPart", "score": 1000, "meta": "method"}
,{"value": "quo:", "score": 1000, "meta": "method"}
,{"value": "squared", "score": 1000, "meta": "method"}
,{"value": "ceiling", "score": 1000, "meta": "method"}
,{"value": "ln", "score": 1000, "meta": "method"}
,{"value": "sqrt", "score": 1000, "meta": "method"}
,{"value": "/", "score": 1000, "meta": "method"}
,{"value": "raisedTo:", "score": 1000, "meta": "method"}
,{"value": ",", "score": 1000, "meta": "method"}
,{"value": "back", "score": 1000, "meta": "method"}
,{"value": "asInteger", "score": 1000, "meta": "method"}
,{"value": "edit", "score": 1000, "meta": "method"}
,{"value": "execute", "score": 1000, "meta": "method"}
,{"value": "asSymbol", "score": 1000, "meta": "method"}
,{"value": "words:", "score": 1000, "meta": "method"}
,{"value": "unixCommand", "score": 1000, "meta": "method"}
,{"value": "with:", "score": 1000, "meta": "method"}
,{"value": "grow:", "score": 1000, "meta": "method"}
,{"value": "exchange:and:", "score": 1000, "meta": "method"}
,{"value": "deepCopyFrom:to:", "score": 1000, "meta": "method"}
,{"value": "with:ifAbsent:do:", "score": 1000, "meta": "method"}
,{"value": "copyFrom:to:", "score": 1000, "meta": "method"}
,{"value": "with:do:", "score": 1000, "meta": "method"}
,{"value": "removeKey:ifAbsent:", "score": 1000, "meta": "method"}
,{"value": "hash:", "score": 1000, "meta": "method"}
,{"value": "basicRemoveKey:", "score": 1000, "meta": "method"}
,{"value": "values", "score": 1000, "meta": "method"}
,{"value": "indexOf:", "score": 1000, "meta": "method"}
,{"value": "asDictionary", "score": 1000, "meta": "method"}
,{"value": "keys", "score": 1000, "meta": "method"}
,{"value": "indexOf:ifAbsent:", "score": 1000, "meta": "method"}
,{"value": "binaryInject:into:", "score": 1000, "meta": "method"}
,{"value": "addFirst:", "score": 1000, "meta": "method"}
,{"value": "removeFirst", "score": 1000, "meta": "method"}
,{"value": "select:", "score": 1000, "meta": "method"}
,{"value": "add:ordered:", "score": 1000, "meta": "method"}
,{"value": "addLast:", "score": 1000, "meta": "method"}
,{"value": "add:", "score": 1000, "meta": "method"}
,{"value": "links", "score": 1000, "meta": "method"}
,{"value": "reject:", "score": 1000, "meta": "method"}
,{"value": "remove:", "score": 1000, "meta": "method"}
,{"value": "addAll:", "score": 1000, "meta": "method"}
,{"value": "collect:", "score": 1000, "meta": "method"}
,{"value": "first", "score": 1000, "meta": "method"}
,{"value": "step:", "score": 1000, "meta": "method"}
,{"value": "lower:", "score": 1000, "meta": "method"}
,{"value": "do:", "score": 1000, "meta": "method"}
,{"value": "upper:", "score": 1000, "meta": "method"}
,{"value": "isEmpty", "score": 1000, "meta": "method"}
,{"value": "sort", "score": 1000, "meta": "method"}
,{"value": "includes:", "score": 1000, "meta": "method"}
,{"value": "asSet", "score": 1000, "meta": "method"}
,{"value": "asByteArray", "score": 1000, "meta": "method"}
,{"value": "asArray", "score": 1000, "meta": "method"}
,{"value": "inject:into:", "score": 1000, "meta": "method"}
,{"value": "occurrencesOf:", "score": 1000, "meta": "method"}
,{"value": "sort:", "score": 1000, "meta": "method"}
,{"value": "<=", "score": 1000, "meta": "method"}
,{"value": "isChar", "score": 1000, "meta": "method"}
,{"value": ">=", "score": 1000, "meta": "method"}
,{"value": "~=", "score": 1000, "meta": "method"}
,{"value": "<", "score": 1000, "meta": "method"}
,{"value": "min:", "score": 1000, "meta": "method"}
,{"value": ">", "score": 1000, "meta": "method"}
,{"value": "max:", "score": 1000, "meta": "method"}
,{"value": "removeProcess:", "score": 1000, "meta": "method"}
,{"value": "runOne", "score": 1000, "meta": "method"}
,{"value": "initialize", "score": 1000, "meta": "method"}
,{"value": "run", "score": 1000, "meta": "method"}
,{"value": "currentProcess", "score": 1000, "meta": "method"}
,{"value": "yield", "score": 1000, "meta": "method"}
,{"value": "addProcess:", "score": 1000, "meta": "method"}
,{"value": "method:", "score": 1000, "meta": "method"}
,{"value": "returnToBlock:", "score": 1000, "meta": "method"}
,{"value": "blockReturn", "score": 1000, "meta": "method"}
,{"value": "arguments:", "score": 1000, "meta": "method"}
,{"value": "temporaries:", "score": 1000, "meta": "method"}
,{"value": "signal", "score": 1000, "meta": "method"}
,{"value": "critical:", "score": 1000, "meta": "method"}
,{"value": "wait", "score": 1000, "meta": "method"}
,{"value": "ifMatch:do:", "score": 1000, "meta": "method"}
,{"value": "else:", "score": 1000, "meta": "method"}
,{"value": "resolution:", "score": 1000, "meta": "method"}
,{"value": "x", "score": 1000, "meta": "method"}
,{"value": "sumy", "score": 1000, "meta": "method"}
,{"value": "sumx", "score": 1000, "meta": "method"}
,{"value": "sumn", "score": 1000, "meta": "method"}
,{"value": "y", "score": 1000, "meta": "method"}
,{"value": "dbTarget:", "score": 1000, "meta": "method"}
,{"value": "dout", "score": 1000, "meta": "method"}
,{"value": "dbOpd1:", "score": 1000, "meta": "method"}
,{"value": "active", "score": 1000, "meta": "method"}
,{"value": "break", "score": 1000, "meta": "method"}
,{"value": "dbOpr:", "score": 1000, "meta": "method"}
,{"value": "resume", "score": 1000, "meta": "method"}
,{"value": "signature", "score": 1000, "meta": "method"}
,{"value": "din:", "score": 1000, "meta": "method"}
,{"value": "clkcount", "score": 1000, "meta": "method"}
,{"value": "start", "score": 1000, "meta": "method"}
,{"value": "res:", "score": 1000, "meta": "method"}
,{"value": "mask:", "score": 1000, "meta": "method"}
,{"value": "dsize", "score": 1000, "meta": "method"}
,{"value": "asize", "score": 1000, "meta": "method"}
,{"value": "wsize", "score": 1000, "meta": "method"}
,{"value": "ack:", "score": 1000, "meta": "method"}
,{"value": "pendingIRQ", "score": 1000, "meta": "method"}
,{"value": "mask", "score": 1000, "meta": "method"}
,{"value": "id", "score": 1000, "meta": "method"}
,{"value": "path:", "score": 1000, "meta": "method"}
,{"value": "int32At:", "score": 1000, "meta": "method"}
,{"value": "size:", "score": 1000, "meta": "method"}
,{"value": "at:", "score": 1000, "meta": "method"}
,{"value": "data", "score": 1000, "meta": "method"}
,{"value": "close", "score": 1000, "meta": "method"}
,{"value": "intAt:wsize:", "score": 1000, "meta": "method"}
,{"value": "at:put16:", "score": 1000, "meta": "method"}
,{"value": "at:put32:", "score": 1000, "meta": "method"}
,{"value": "bytesDo:", "score": 1000, "meta": "method"}
,{"value": "path", "score": 1000, "meta": "method"}
,{"value": "open", "score": 1000, "meta": "method"}
,{"value": "int16At:", "score": 1000, "meta": "method"}
,{"value": "waitForIRQ:", "score": 1000, "meta": "method"}
,{"value": "devno", "score": 1000, "meta": "method"}
,{"value": "size", "score": 1000, "meta": "method"}
,{"value": "reverseDo:", "score": 1000, "meta": "method"}
,{"value": "value:", "score": 1000, "meta": "method"}
,{"value": "includesKey:", "score": 1000, "meta": "method"}
,{"value": "add:whenFalse:", "score": 1000, "meta": "method"}
,{"value": "binaryDo:", "score": 1000, "meta": "method"}
,{"value": "removeKey:", "score": 1000, "meta": "method"}
,{"value": "at:ifAbsent:", "score": 1000, "meta": "method"}
,{"value": "removeValue:", "score": 1000, "meta": "method"}
,{"value": "at:put:", "score": 1000, "meta": "method"}
,{"value": "value", "score": 1000, "meta": "method"}
,{"value": "key:", "score": 1000, "meta": "method"}
,{"value": "link:", "score": 1000, "meta": "method"}
,{"value": "not", "score": 1000, "meta": "method"}
,{"value": "xor:", "score": 1000, "meta": "method"}
,{"value": "ifTrue:ifFalse:", "score": 1000, "meta": "method"}
,{"value": "ifTrue:", "score": 1000, "meta": "method"}
,{"value": "ifFalse:", "score": 1000, "meta": "method"}
,{"value": "or:", "score": 1000, "meta": "method"}
,{"value": "and:", "score": 1000, "meta": "method"}
,{"value": "ifFalse:ifTrue:", "score": 1000, "meta": "method"}
,{"value": "publish:", "score": 1000, "meta": "method"}
,{"value": "name", "score": 1000, "meta": "method"}
,{"value": "uri", "score": 1000, "meta": "method"}
,{"value": "type", "score": 1000, "meta": "method"}
,{"value": "callerid", "score": 1000, "meta": "method"}
,{"value": "port", "score": 1000, "meta": "method"}
,{"value": "set:", "score": 1000, "meta": "method"}
,{"value": "next", "score": 1000, "meta": "method"}
,{"value": "randInteger:", "score": 1000, "meta": "method"}
,{"value": "next:", "score": 1000, "meta": "method"}
,{"value": "between:and:", "score": 1000, "meta": "method"}
,{"value": "deepCopy", "score": 1000, "meta": "method"}
,{"value": "hash", "score": 1000, "meta": "method"}
,{"value": "new", "score": 1000, "meta": "method"}
,{"value": "shallowCopy", "score": 1000, "meta": "method"}
,{"value": "isShortInteger", "score": 1000, "meta": "method"}
,{"value": "printString", "score": 1000, "meta": "method"}
,{"value": "class", "score": 1000, "meta": "method"}
,{"value": "isKindOf:", "score": 1000, "meta": "method"}
,{"value": "isLongInteger", "score": 1000, "meta": "method"}
,{"value": "=", "score": 1000, "meta": "method"}
,{"value": "asString", "score": 1000, "meta": "method"}
,{"value": "basicAt:", "score": 1000, "meta": "method"}
,{"value": "basicAt:put:", "score": 1000, "meta": "method"}
,{"value": "isInteger", "score": 1000, "meta": "method"}
,{"value": "~~", "score": 1000, "meta": "method"}
,{"value": "copy", "score": 1000, "meta": "method"}
,{"value": "isNil", "score": 1000, "meta": "method"}
,{"value": "isFraction", "score": 1000, "meta": "method"}
,{"value": "basicSize", "score": 1000, "meta": "method"}
,{"value": "isFloat", "score": 1000, "meta": "method"}
,{"value": "message:notRecognizedWithArguments:", "score": 1000, "meta": "method"}
,{"value": "==", "score": 1000, "meta": "method"}
,{"value": "notNil", "score": 1000, "meta": "method"}
,{"value": "isNumber", "score": 1000, "meta": "method"}
,{"value": "print", "score": 1000, "meta": "method"}
,{"value": "assign:value:", "score": 1000, "meta": "method"}
,{"value": "display", "score": 1000, "meta": "method"}
,{"value": "isMemberOf:", "score": 1000, "meta": "method"}
,{"value": "respondsTo:", "score": 1000, "meta": "method"}
,{"value": "variables", "score": 1000, "meta": "variables"}
,{"value": "superClass", "score": 1000, "meta": "variables"}
,{"value": "methods", "score": 1000, "meta": "variables"}
,{"value": "instanceSize", "score": 1000, "meta": "variables"}
,{"value": "linkPointer", "score": 1000, "meta": "variables"}
,{"value": "stackTop", "score": 1000, "meta": "variables"}
,{"value": "stack", "score": 1000, "meta": "variables"}
,{"value": "stamp", "score": 1000, "meta": "variables"}
,{"value": "s", "score": 1000, "meta": "variables"}
,{"value": "mi", "score": 1000, "meta": "variables"}
,{"value": "h", "score": 1000, "meta": "variables"}
,{"value": "y", "score": 1000, "meta": "variables"}
,{"value": "m", "score": 1000, "meta": "variables"}
,{"value": "d", "score": 1000, "meta": "variables"}
,{"value": "mode", "score": 1000, "meta": "variables"}
,{"value": "number", "score": 1000, "meta": "variables"}
,{"value": "mport", "score": 1000, "meta": "variables"}
,{"value": "muri", "score": 1000, "meta": "variables"}
,{"value": "bytePointer", "score": 1000, "meta": "variables"}
,{"value": "argLoc", "score": 1000, "meta": "variables"}
,{"value": "argCount", "score": 1000, "meta": "variables"}
,{"value": "context", "score": 1000, "meta": "variables"}
,{"value": "watch", "score": 1000, "meta": "variables"}
,{"value": "class", "score": 1000, "meta": "variables"}
,{"value": "temporarySize", "score": 1000, "meta": "variables"}
,{"value": "stackSize", "score": 1000, "meta": "variables"}
,{"value": "literals", "score": 1000, "meta": "variables"}
,{"value": "bytecodes", "score": 1000, "meta": "variables"}
,{"value": "message", "score": 1000, "meta": "variables"}
,{"value": "text", "score": 1000, "meta": "variables"}
,{"value": "digits", "score": 1000, "meta": "variables"}
,{"value": "negative", "score": 1000, "meta": "variables"}
,{"value": "bottom", "score": 1000, "meta": "variables"}
,{"value": "top", "score": 1000, "meta": "variables"}
,{"value": "hashTable", "score": 1000, "meta": "variables"}
,{"value": "links", "score": 1000, "meta": "variables"}
,{"value": "step", "score": 1000, "meta": "variables"}
,{"value": "upper", "score": 1000, "meta": "variables"}
,{"value": "lower", "score": 1000, "meta": "variables"}
,{"value": "currentProcess", "score": 1000, "meta": "variables"}
,{"value": "temporaries", "score": 1000, "meta": "variables"}
,{"value": "arguments", "score": 1000, "meta": "variables"}
,{"value": "method", "score": 1000, "meta": "variables"}
,{"value": "linkLocation", "score": 1000, "meta": "variables"}
,{"value": "processList", "score": 1000, "meta": "variables"}
,{"value": "count", "score": 1000, "meta": "variables"}
,{"value": "notdone", "score": 1000, "meta": "variables"}
,{"value": "const", "score": 1000, "meta": "variables"}
,{"value": "amap", "score": 1000, "meta": "variables"}
,{"value": "devfile", "score": 1000, "meta": "variables"}
,{"value": "data", "score": 1000, "meta": "variables"}
,{"value": "size", "score": 1000, "meta": "variables"}
,{"value": "devno", "score": 1000, "meta": "variables"}
,{"value": "path", "score": 1000, "meta": "variables"}
,{"value": "nextLink", "score": 1000, "meta": "variables"}
,{"value": "value", "score": 1000, "meta": "variables"}
,{"value": "key", "score": 1000, "meta": "variables"}
,{"value": "port", "score": 1000, "meta": "variables"}
,{"value": "uri", "score": 1000, "meta": "variables"}
,{"value": "type", "score": 1000, "meta": "variables"}
,{"value": "name", "score": 1000, "meta": "variables"}
,{"value": "calledid", "score": 1000, "meta": "variables"}
,{"value": "id", "score": 1000, "meta": "variables"}
]
